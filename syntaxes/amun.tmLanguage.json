{
	"$schema": "https://amunw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Amun",
	"fileTypes": [
		"amun"
	],
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#comment"
		},
		{
			"include": "#constant"
		},
		{
			"include": "#operators"
		},
		{
			"include": "#notes"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.amun",
					"match": "\\b(var|const|load|import|type|if|else|fun|operator|cast|defer|switch|break|continue|varargs|void|for|while|struct|enum|return|value_size|type_size|type_allign)\\b"
				},
				{
					"name": "keyword.types.amun",
					"match": "\\b(int1|int8|int16|int32|int64|uint8|uint16|uint32|uint64|float32|float64|bool|char|uchar)\\b"
				}
			]
		},
		"numbers": {
			"patterns": [
				{
					"name": "constant.numeric.decimal.amun",
					"match": "\\b[0-9][0-9_]*(?:[i|u](?:8|16|32|64))?\\b(?!\\$)"
				},
				{
					"name": "constant.numeric.float.amun",
					"match": "\\b[0-9][0-9_]*(\\.[0-9][0-9_]*)?([eE][+-]?[0-9_]+)?*((?:[f](?:32|64)))\\b(?!\\$)"
				},
				{
					"name": "constant.numeric.hexadecimal.amun",
					"match": "\\b0x[a-fA-F0-9_]+(?:[i|u](?:8|16|32|64))?\\b(?!\\$)"
				}
			]
		},
		"strings": {
			"patterns": [
				{
					"name": "string.quoted.double.amun",
					"begin": "(')",
					"end": "(')",
					"patterns": [
						{
							"name": "constant.character.escape.amun",
							"match": "\\\\."
						}
					]
				},
				{
					"name": "string.quoted.single.amun",
					"begin": "\"",
					"end": "\"",
					"endCaptures": {
						"1": {
							"name": "punctuation.end.quote.single.amun"
						}
					},
					"patterns": [
						{
							"name": "constant.character.escape.amun",
							"match": "\\\\."
						}
					]
				}
			]
		},
		"comment": {
			"patterns": [
				{
					"captures": {
						"1": {
							"name": "punctuation.definition.comment.amun"
						}
					},
					"match": "(//).*$\\n?",
					"name": "comment.line.double-slash.amun"
				},
				{
					"name": "comment.block.amun",
					"match": "/\\*\\*/"
				},
				{
					"name": "comment.block.documentation.amun",
					"begin": "/\\*",
					"end": "\\*/",
					"patterns": [
						{
							"include": "#comment"
						}
					]
				}
			]
		},
		"constant": {
			"match": "\\b(?:true|false|null)\\b",
			"name": "constant.language.amun"
		},
		"operators": {
			"patterns": [
				{
					"name": "keyword.operator.arithmetic.amun",
					"match": "(\\+|\\-|\\*|\\/|\\^|\\~|\\%)(=)?"
				},
				{
					"name": "keyword.operator.comparison.amun",
					"match": "(((=|>|<)(=)?)|!=)"
				},
				{
					"name": "keyword.operator.range.amun",
					"match": "\\.\\."
				}
			]
		},
		"notes": {
			"patterns": [
				{
					"name": "support.function.builtin.amun",
					"match": "@[_a-zA-Z][_a-zA-Z0-9]*"
				}
			]
		}
	},
	"scopeName": "source.amun"
}